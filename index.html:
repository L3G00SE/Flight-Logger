<!DOCTYPE html>
<html lang="en" >
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Matte Flight Log & License Tracker</title>
  <style>
    /* Matte dark theme */
    body {
      background-color: #2e2e2e;
      color: #ccc;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      max-width: 720px;
      margin: auto;
      padding: 20px;
      user-select: none;
    }
    h1, h2 {
      text-align: center;
      color: #d0d0d0;
      user-select: text;
    }
    form {
      background-color: #3a3a3a;
      padding: 20px;
      border-radius: 10px;
      box-shadow: 0 0 8px #121212;
      user-select: text;
    }
    label {
      display: block;
      margin-top: 12px;
      font-weight: 600;
      color: #ccc;
      user-select: text;
    }
    input[type="number"],
    input[type="date"],
    select {
      width: 100%;
      padding: 10px;
      margin-top: 6px;
      border-radius: 6px;
      border: 1.5px solid #555;
      background-color: #222;
      color: #eee;
      font-size: 1rem;
      box-sizing: border-box;
      transition: border-color 0.3s ease;
      user-select: text;
    }
    input[type="number"]:focus,
    input[type="date"]:focus,
    select:focus {
      outline: none;
      border-color: #6bc2d9;
      box-shadow: 0 0 8px #3bc9e0;
      background-color: #1a1a1a;
      color: #fff;
    }
    button {
      margin-top: 20px;
      padding: 12px;
      width: 100%;
      font-size: 1.1rem;
      font-weight: 600;
      color: #222;
      background: #6bc2d9;
      border: none;
      border-radius: 10px;
      cursor: pointer;
      user-select: none;
      transition: background-color 0.3s ease;
    }
    button:hover {
      background-color: #58b7c9;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-top: 30px;
      background-color: #3a3a3a;
      border-radius: 12px;
      overflow: hidden;
      user-select: text;
    }
    th, td {
      padding: 10px;
      text-align: center;
      border-bottom: 1px solid #555;
      color: #ccc;
      font-variant-numeric: tabular-nums;
    }
    th {
      background-color: #222;
      font-weight: 700;
    }
    tr:last-child td {
      border-bottom: none;
    }
    .progress-container {
      margin-top: 12px;
      user-select: none;
    }
    .progress-label {
      font-weight: 600;
      color: #b0d6df;
      margin-bottom: 6px;
      user-select: text;
    }
    .progress-bar {
      width: 100%;
      background-color: #222;
      border-radius: 12px;
      height: 22px;
      overflow: hidden;
      box-shadow: inset 0 0 5px #111;
    }
    .progress-fill {
      height: 100%;
      background: linear-gradient(90deg, #6bc2d9, #39a0bc);
      width: 0%;
      transition: width 0.5s ease;
      box-shadow: 0 0 5px #39a0bc;
      border-radius: 12px 0 0 12px;
    }
    #message {
      margin-top: 15px;
      padding: 10px;
      border-radius: 8px;
      font-weight: 600;
      text-align: center;
      user-select: none;
    }
    #message.success {
      background-color: #2b5a2b;
      color: #c8f7c8;
      box-shadow: 0 0 8px #2b5a2b;
    }
    #message.error {
      background-color: #7a1a1a;
      color: #f7c8c8;
      box-shadow: 0 0 8px #7a1a1a;
    }
    @media (max-width: 480px) {
      body {
        padding: 15px 10px;
      }
      input[type="number"],
      input[type="date"],
      select,
      button {
        font-size: 1rem;
      }
    }
  </style>
</head>
<body>

<h1>Flight Log & License Tracker</h1>

<form id="flightForm" autocomplete="off" novalidate>
  <label for="date">Date</label>
  <input type="date" id="date" required />

  <label for="hours">Flight hours</label>
  <input type="number" id="hours" min="0.1" step="0.1" placeholder="e.g. 1.5" required />

  <label for="pic">PIC (Pilot In Command)</label>
  <select id="pic" required>
    <option value="yes">Yes</option>
    <option value="no">No</option>
  </select>

  <label for="type">Flight Type</label>
  <select id="type" required>
    <option value="single">Single Engine</option>
    <option value="multi">Multi Engine</option>
    <option value="glider">Glider</option>
    <option value="ultralight">Ultralight</option>
    <option value="heli">Helicopter</option>
    <option value="seaplane">Seaplane</option>
    <option value="other">Other</option>
  </select>

  <label for="vfrif">Flight Rules</label>
  <select id="vfrif" required>
    <option value="vfr">VFR</option>
    <option value="ifr">IFR</option>
  </select>

  <label for="night">Night Flight</label>
  <select id="night" required>
    <option value="yes">Yes</option>
    <option value="no" selected>No</option>
  </select>

  <label for="crosscountry">Cross-Country Flight</label>
  <select id="crosscountry" required>
    <option value="yes">Yes</option>
    <option value="no" selected>No</option>
  </select>

  <button type="submit">Add Flight</button>
</form>

<div id="message" aria-live="polite"></div>

<h2>Logged Flights</h2>
<table id="flightsTable" aria-label="Logged Flights">
  <thead>
    <tr>
      <th>Date</th><th>Hours</th><th>PIC</th><th>Type</th><th>Rules</th><th>Night</th><th>Cross-Country</th>
    </tr>
  </thead>
  <tbody></tbody>
</table>

<h2>License Progress</h2>
<div id="licenseTotals"></div>

<h2>Hours Summary by Category</h2>
<table class="summary-table" aria-label="Summary of Flight Hours by Category">
  <thead>
    <tr><th>Category</th><th>Hours</th></tr>
  </thead>
  <tbody id="summaryBody"></tbody>
</table>

<script>
  const flightForm = document.getElementById('flightForm');
  const flightsTableBody = document.querySelector('#flightsTable tbody');
  const licenseTotalsDiv = document.getElementById('licenseTotals');
  const summaryBody = document.getElementById('summaryBody');
  const messageDiv = document.getElementById('message');

  // Load flights from localStorage or empty
  let flights = JSON.parse(localStorage.getItem('flights') || '[]');

  // License rules and minimums
  const licenses = {
    atpl: {
      name: 'ATPL',
      minHours: 1500,
      maxGliderHoursCounted: 40,
      minPIC: 500,
      minCrossCountry: 100,
      minInstrument: 75,
      minNight: 50,
      hoursCounted: 0,
      picCounted: 0,
      crossCountryCounted: 0,
      instrumentCounted: 0,
      nightCounted: 0,
      description: `1500 total hours (max 40 glider), 500 PIC, 100 cross-country, 75 IFR, 50 night`
    },
    ppl: {
      name: 'PPL',
      minHours: 45,
      maxGliderHoursCounted: 10,
      minPIC: 10,
      minCrossCountry: 5,
      minInstrument: 0,
      minNight: 3,
      hoursCounted: 0,
      picCounted: 0,
      crossCountryCounted: 0,
      instrumentCounted: 0,
      nightCounted: 0,
      description: `45 total hours (max 10 glider), 10 PIC, 5 cross-country, 3 night`
    },
    glider: {
      name: 'Glider License',
      minHours: 10,
      maxGliderHoursCounted: null,
      minPIC: 0,
      minCrossCountry: 0,
      minInstrument: 0,
      minNight: 0,
      hoursCounted: 0,
      picCounted: 0,
      crossCountryCounted: 0,
      instrumentCounted: 0,
      nightCounted: 0,
      description: `10 total glider hours`
    }
  };

  // Save flights to localStorage
  function saveFlights() {
    localStorage.setItem('flights', JSON.stringify(flights));
  }

  // Render flights table rows
  function renderFlights() {
    flightsTableBody.innerHTML = '';
    flights.forEach(({ date, hours, pic, type, vfrif, night, crosscountry }) => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td>${date}</td>
        <td>${hours.toFixed(1)}</td>
        <td>${pic}</td>
        <td>${type}</td>
        <td>${vfrif.toUpperCase()}</td>
        <td>${night}</td>
        <td>${crosscountry}</td>
      `;
      flightsTableBody.appendChild(row);
    });
  }

  // Calculate